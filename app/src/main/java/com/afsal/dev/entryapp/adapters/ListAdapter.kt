package com.afsal.dev.entryapp.adaptersimport android.util.Logimport android.view.LayoutInflaterimport android.view.ViewGroupimport android.widget.Toastimport androidx.recyclerview.widget.AsyncListDifferimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.RecyclerViewimport com.afsal.dev.entryapp.databinding.RecyclerViewItemBindingclass ListAdapter(private val checked:(item:String,selection:Boolean)->Unit):RecyclerView.Adapter<ListAdapter.ItemeHoleder>() {     val selectedItemsList = mutableListOf<String>()    private val diffCallBack = object :DiffUtil.ItemCallback<String>(){        override fun areItemsTheSame(oldItem: String, newItem: String): Boolean {            return oldItem.length == newItem.length        }        override fun areContentsTheSame(oldItem: String, newItem: String): Boolean {           return oldItem==newItem        }    }    val differ= AsyncListDiffer(this,diffCallBack)  inner  class ItemeHoleder(val binding: RecyclerViewItemBinding):RecyclerView.ViewHolder(binding.root) {      init {          binding.checkBox.setOnCheckedChangeListener { buttonView, isChecked ->              Log.d("MMM","iscchecked $isChecked")              val item=differ.currentList[adapterPosition]              checked(item,isChecked)              if (isChecked){                  selectedItemsList.add(item)              }else{                  selectedItemsList.remove(item)              }          }      }    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ItemeHoleder {       return  ItemeHoleder(RecyclerViewItemBinding.inflate(LayoutInflater.from(parent.context),parent,false))    }    override fun onBindViewHolder(holder: ItemeHoleder, position: Int) {             val item=differ.currentList[position]               holder.binding.checkBox.text=item                 holder.binding.checkBox.isChecked=false              // holder.bind(item)    }    override fun getItemCount()=differ.currentList.size}